"""Added notifications

Revision ID: 41586d38ec52
Revises: c43cbdd2edc9
Create Date: 2024-07-18 16:11:04.540332

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '41586d38ec52'
down_revision = 'c43cbdd2edc9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('aes_algorithm',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               nullable=True)
        batch_op.alter_column('aes_key',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=64),
               nullable=True)
        batch_op.alter_column('aes_iv',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=64),
               nullable=True)
        batch_op.drop_column('read')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('read', sa.BOOLEAN(), nullable=True))
        batch_op.alter_column('aes_iv',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('aes_key',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('aes_algorithm',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_timestamp'))

    op.drop_table('notification')
    # ### end Alembic commands ###
